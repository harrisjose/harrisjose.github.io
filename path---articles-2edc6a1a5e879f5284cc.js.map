{"version":3,"sources":["webpack:///path---articles-2edc6a1a5e879f5284cc.js","webpack:///./.cache/json/articles.json"],"names":["webpackJsonp","359","module","exports","data","site","siteMetadata","title","allMarkdownRemark","edges","node","excerpt","fields","slug","frontmatter","date","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,gBAAuBC,mBAAsBC,QAAUC,MAAQC,QAAA,6IAAAC,QAAiKC,KAAA,kBAAwBC,aAAgBC,KAAA,eAAAR,MAAA,iCAA+DG,MAAQC,QAAA,yIAAAC,QAA6JC,KAAA,oCAA0CC,aAAgBC,KAAA,iBAAAR,MAAA,qCAAqEG,MAAQC,QAAA,gJAAAC,QAAoKC,KAAA,6BAAmCC,aAAgBC,KAAA,oBAAAR,MAAA,sCAAyEG,MAAQC,QAAA,yIAAAC,QAA6JC,KAAA,+BAAqCC,aAAgBC,KAAA,oBAAAR,MAAA,mCAAqES","file":"path---articles-2edc6a1a5e879f5284cc.js","sourcesContent":["webpackJsonp([56932394960959],{\n\n/***/ 359:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Harris Jose\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"I’m holding off on a couple of other posts because this one is far more important. The EmberJS core team has called for blog posts as the…\",\"fields\":{\"slug\":\"/emberjs-2018/\"},\"frontmatter\":{\"date\":\"15 May, 2018\",\"title\":\"EmberJS 2018 - My Wishlist\"}}},{\"node\":{\"excerpt\":\"If you’ve been following the front-end space it’s very likely that you’ve heard of React. For a long time, I only used React for tiny…\",\"fields\":{\"slug\":\"/revamping-the-blog-with-gatsby/\"},\"frontmatter\":{\"date\":\"12 April, 2018\",\"title\":\"Rewriting the blog with Gatsby\"}}},{\"node\":{\"excerpt\":\"Gulp is a great tool for running tasks. It saves us loads of time while development and is very handy when it comes to building websites. We…\",\"fields\":{\"slug\":\"/gulp-scaling-strategies/\"},\"frontmatter\":{\"date\":\"14 February, 2018\",\"title\":\"Strategies for Gulp.js at scale\"}}},{\"node\":{\"excerpt\":\"The Maximum Sum Subarray is a very commonly used example to demonstrate how dynamic programming works. Given an array of numbers, the…\",\"fields\":{\"slug\":\"/max-sum-kadanes-algorithm/\"},\"frontmatter\":{\"date\":\"01 February, 2018\",\"title\":\"Maximum Sum using Kadane's\"}}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-2edc6a1a5e879f5284cc.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Harris Jose\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"I’m holding off on a couple of other posts because this one is far more important. The EmberJS core team has called for blog posts as the…\",\"fields\":{\"slug\":\"/emberjs-2018/\"},\"frontmatter\":{\"date\":\"15 May, 2018\",\"title\":\"EmberJS 2018 - My Wishlist\"}}},{\"node\":{\"excerpt\":\"If you’ve been following the front-end space it’s very likely that you’ve heard of React. For a long time, I only used React for tiny…\",\"fields\":{\"slug\":\"/revamping-the-blog-with-gatsby/\"},\"frontmatter\":{\"date\":\"12 April, 2018\",\"title\":\"Rewriting the blog with Gatsby\"}}},{\"node\":{\"excerpt\":\"Gulp is a great tool for running tasks. It saves us loads of time while development and is very handy when it comes to building websites. We…\",\"fields\":{\"slug\":\"/gulp-scaling-strategies/\"},\"frontmatter\":{\"date\":\"14 February, 2018\",\"title\":\"Strategies for Gulp.js at scale\"}}},{\"node\":{\"excerpt\":\"The Maximum Sum Subarray is a very commonly used example to demonstrate how dynamic programming works. Given an array of numbers, the…\",\"fields\":{\"slug\":\"/max-sum-kadanes-algorithm/\"},\"frontmatter\":{\"date\":\"01 February, 2018\",\"title\":\"Maximum Sum using Kadane's\"}}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles.json\n// module id = 359\n// module chunks = 56932394960959"],"sourceRoot":""}