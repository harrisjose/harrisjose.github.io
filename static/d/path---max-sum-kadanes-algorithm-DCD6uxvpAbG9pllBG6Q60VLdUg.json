{"data":{"site":{"siteMetadata":{"title":"Harris Jose","author":"Harris Jose"}},"markdownRemark":{"id":"d45e9109-e6a5-52ad-a44c-bc4755612c37","html":"<p>The Maximum Sum Subarray is a very commonly used example to demonstrate how dynamic programming works. Given an array of numbers, the challenge is to find out</p>\n<ul>\n<li>The maximum subarray sum within the array</li>\n<li>The contiguous subarray that gives you this sum</li>\n</ul>\n<h2>Kadaneâ€™s Algorithm</h2>\n<p>Okay so moving on to the first problem, a really cool way to find out the maximum subarray sum was proposed by this dude called <a href=\"https://en.wikipedia.org/wiki/Joseph_Born_Kadane\">Kadane</a><sup>[1]</sup>. The straightforward version of it is that if you know the maximum sum at a point <strong>A</strong> in your array then the maximum sum at <strong>A+1</strong> is going to be <strong>Maximum at A + Element at A+1</strong> or <strong>Element at A+1</strong> depending on which one is greater.</p>\n<p>In practice this is a whole lot simpler that what the above might suggest,</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> maximum <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  sum <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> element<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">></span> maximum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    maximum <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Maximum sum is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>maximum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2>Finding the Maximum Subarray</h2>\n<p>To find the subarray that gives the maximum sum, you can use trackers to keep track of the start and end positions<sup>[2]</sup>.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> maximum <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> currentStart <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  sum <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> element<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> element <span class=\"token operator\">&lt;</span> element<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    currentStart <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">></span> maximum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    maximum <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">;</span>\n    start <span class=\"token operator\">=</span> currentStart<span class=\"token punctuation\">;</span>\n    end <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Maximum sum is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>maximum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Maximum subarray is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>start<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>end<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2>References</h2>\n<p>[1] - <a href=\"https://en.wikipedia.org/wiki/Maximum_subarray_problem\">Kadaneâ€™s algoritm - Wikipedia</a><br>\n[2] - <a href=\"https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\">Maximum Sum Subarray - Geeksforgeeks</a></p>","frontmatter":{"title":"Maximum Sum using Kadane's","date":"February 01, 2018"}}},"pageContext":{"jsonName":"max-sum-kadanes-algorithm","internalComponentName":"ComponentMaxSumKadanesAlgorithm","path":"/max-sum-kadanes-algorithm/","component":"/Users/harris/workspace/blog/src/templates/blog-post.js","componentChunkName":"component---src-templates-blog-post-js","context":{"slug":"/max-sum-kadanes-algorithm/","previous":null,"next":{"fields":{"slug":"/gulp-scaling-strategies/"},"frontmatter":{"title":"Strategies for Gulp.js at scale"}}},"updatedAt":1527611086101,"pluginCreator___NODE":"Plugin default-site-plugin","pluginCreatorId":"Plugin default-site-plugin","componentPath":"/Users/harris/workspace/blog/src/templates/blog-post.js","slug":"/max-sum-kadanes-algorithm/","previous":null,"next":{"fields":{"slug":"/gulp-scaling-strategies/"},"frontmatter":{"title":"Strategies for Gulp.js at scale"}}}}