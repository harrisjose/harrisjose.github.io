{"version":3,"sources":["webpack:///path---max-sum-kadanes-algorithm-32daa7d6ad2ac22ae835.js","webpack:///./.cache/json/max-sum-kadanes-algorithm.json"],"names":["webpackJsonp","362","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","next","fields"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,cAAAC,OAAA,gBAA8CC,gBAAmBC,GAAA,2HAAAC,KAAA,06SAAgpTC,aAA0TL,MAAA,6BAAAM,KAAA,uBAAkEC,aAAgBC,KAAA,8BAAAC,SAAA,KAAAC,MAA6DC,QAAUH,KAAA,6BAAmCH,aAAgBL,MAAA","file":"path---max-sum-kadanes-algorithm-32daa7d6ad2ac22ae835.js","sourcesContent":["webpackJsonp([127047584882956],{\n\n/***/ 362:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Harris Jose\",\"author\":\"Harris Jose\"}},\"markdownRemark\":{\"id\":\"/Users/harris/workspace/experiments/blog/src/pages/max-sum-kadanes-algorithm/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>The Maximum Sum Subarray is a very commonly used example to demonstrate how dynamic programming works. Given an array of numbers, the challenge is to find out</p>\\n<ul>\\n<li>The maximum subarray sum within the array</li>\\n<li>The contiguous subarray that gives you this sum</li>\\n</ul>\\n<h2>Kadaneâ€™s Algorithm</h2>\\n<p>Okay so moving on to the first problem, a really cool way to find out the maximum subarray sum was proposed by this dude called <a href=\\\"https://en.wikipedia.org/wiki/Joseph_Born_Kadane\\\">Kadane</a><sup>[1]</sup>. The straightforward version of it is that if you know the maximum sum at a point <strong>A</strong> in your array then the maximum sum at <strong>A+1</strong> is going to be <strong>Maximum at A + Element at A+1</strong> or <strong>Element at A+1</strong> depending on which one is greater.</p>\\n<p>In practice this is a whole lot simpler that what the above might suggest,</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> array <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> sum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> maximum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> array<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> element <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  sum <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">+</span> element<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">></span> maximum<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    maximum <span class=\\\"token operator\\\">=</span> sum<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Maximum sum is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>maximum<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>Finding the Maximum Subarray</h2>\\n<p>To find the subarray that gives the maximum sum, you can use trackers to keep track of the start and end positions<sup>[2]</sup>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> array <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> sum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> maximum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> currentStart <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> start <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> end <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> array<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> element <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  sum <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">+</span> element<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">+</span> element <span class=\\\"token operator\\\">&lt;</span> element<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    currentStart <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">></span> maximum<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    maximum <span class=\\\"token operator\\\">=</span> sum<span class=\\\"token punctuation\\\">;</span>\\n    start <span class=\\\"token operator\\\">=</span> currentStart<span class=\\\"token punctuation\\\">;</span>\\n    end <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Maximum sum is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>maximum<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Maximum subarray is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>start<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> - </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>end<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>References</h2>\\n<p>[1] - <a href=\\\"https://en.wikipedia.org/wiki/Maximum_subarray_problem\\\">Kadaneâ€™s algoritm - Wikipedia</a><br>\\n[2] - <a href=\\\"https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\\\">Maximum Sum Subarray - Geeksforgeeks</a></p>\",\"frontmatter\":{\"title\":\"Maximum Sum using Kadane's\",\"date\":\"February 01, 2018\"}}},\"pathContext\":{\"slug\":\"/max-sum-kadanes-algorithm/\",\"previous\":null,\"next\":{\"fields\":{\"slug\":\"/gulp-scaling-strategies/\"},\"frontmatter\":{\"title\":\"Strategies for Gulp.js at scale\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---max-sum-kadanes-algorithm-32daa7d6ad2ac22ae835.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Harris Jose\",\"author\":\"Harris Jose\"}},\"markdownRemark\":{\"id\":\"/Users/harris/workspace/experiments/blog/src/pages/max-sum-kadanes-algorithm/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>The Maximum Sum Subarray is a very commonly used example to demonstrate how dynamic programming works. Given an array of numbers, the challenge is to find out</p>\\n<ul>\\n<li>The maximum subarray sum within the array</li>\\n<li>The contiguous subarray that gives you this sum</li>\\n</ul>\\n<h2>Kadaneâ€™s Algorithm</h2>\\n<p>Okay so moving on to the first problem, a really cool way to find out the maximum subarray sum was proposed by this dude called <a href=\\\"https://en.wikipedia.org/wiki/Joseph_Born_Kadane\\\">Kadane</a><sup>[1]</sup>. The straightforward version of it is that if you know the maximum sum at a point <strong>A</strong> in your array then the maximum sum at <strong>A+1</strong> is going to be <strong>Maximum at A + Element at A+1</strong> or <strong>Element at A+1</strong> depending on which one is greater.</p>\\n<p>In practice this is a whole lot simpler that what the above might suggest,</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> array <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> sum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> maximum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> array<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> element <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  sum <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">+</span> element<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">></span> maximum<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    maximum <span class=\\\"token operator\\\">=</span> sum<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Maximum sum is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>maximum<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>Finding the Maximum Subarray</h2>\\n<p>To find the subarray that gives the maximum sum, you can use trackers to keep track of the start and end positions<sup>[2]</sup>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> array <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> sum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> maximum <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> currentStart <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> start <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> end <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> array<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> element <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  sum <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">+</span> element<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">+</span> element <span class=\\\"token operator\\\">&lt;</span> element<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    currentStart <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>sum <span class=\\\"token operator\\\">></span> maximum<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    maximum <span class=\\\"token operator\\\">=</span> sum<span class=\\\"token punctuation\\\">;</span>\\n    start <span class=\\\"token operator\\\">=</span> currentStart<span class=\\\"token punctuation\\\">;</span>\\n    end <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Maximum sum is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>maximum<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Maximum subarray is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>start<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> - </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>end<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>References</h2>\\n<p>[1] - <a href=\\\"https://en.wikipedia.org/wiki/Maximum_subarray_problem\\\">Kadaneâ€™s algoritm - Wikipedia</a><br>\\n[2] - <a href=\\\"https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\\\">Maximum Sum Subarray - Geeksforgeeks</a></p>\",\"frontmatter\":{\"title\":\"Maximum Sum using Kadane's\",\"date\":\"February 01, 2018\"}}},\"pathContext\":{\"slug\":\"/max-sum-kadanes-algorithm/\",\"previous\":null,\"next\":{\"fields\":{\"slug\":\"/gulp-scaling-strategies/\"},\"frontmatter\":{\"title\":\"Strategies for Gulp.js at scale\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/max-sum-kadanes-algorithm.json\n// module id = 362\n// module chunks = 127047584882956"],"sourceRoot":""}